* Tor ZKP

Demonstration flow of ZKP in Tor. The code works on Linux, but We have not tried this code in Windows or Mac.

** Requisites

- Install [[https://www.rust-lang.org/][rust]].

- Install [[https://docs.docker.com/][docker]].

- Install [[https://www.torproject.org/][Tor]]

** Setup

To execute the flow we need to compile the rust program and build the docker images from the root directory of this repository.

#+begin_src sh
docker-compose build
cargo build --release
#+end_src

** Execute flow

From the root directory of this repository.

1. Start the docker machines.

   #+begin_src sh
   docker-compose up
   #+end_src

   The onion service direction will be printed. Save it for later. E.g. 'cd6pkefplpqvnqhdpcqf5hgcnimvoudts4t2uy3qzgl5r4gdpizcc5id.onion'.

2. Start tor.

   #+begin_src sh
   tor
   #+end_src

3. Execute the client.

   #+begin_src sh
   ./target/release/torzkp
   #+end_src

   You will be asked for the type of node. Type *1* for *Client*. Then, you will be asked for the onion service direction. Type in the direction we got on step 1.

At that point, the flow will start executing and you should see output from the docker machines and the client (in their respective terminals). If all worked as expected, after a few seconds, the client terminal will show a message with the verification output. *Proof verification worked = true* or *Proof verification worked = false*.

** Extra information

- We used [[https://github.com/xevisalle/zpie][zpie]] for the ZKP.
- The *circuits* folder contains the circuits used for the ZKP.
- The *data* folder contains the proving and verifying key that should be generated by a third trusted party or a MPC.
- The *libraries* folder contains the dependencies already compiled.
   - zpie
   - gmp
   - mcl
   - stdc++

** Credits

- [[https://github.com/xevisalle][Xavier Salleras]]
